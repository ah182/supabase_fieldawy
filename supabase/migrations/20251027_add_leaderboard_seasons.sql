-- Migration for Leaderboard Seasons & Prize Archiving

-- Step 1: Create the table to manage leaderboard seasons
CREATE TABLE IF NOT EXISTS public.leaderboard_seasons (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  start_date TIMESTAMPTZ NOT NULL,
  end_date TIMESTAMPTZ NOT NULL,
  is_active BOOLEAN DEFAULT FALSE NOT NULL,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Step 2: Create a table to archive user rankings at the end of each season
CREATE TABLE IF NOT EXISTS public.season_rankings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  season_id BIGINT NOT NULL REFERENCES public.leaderboard_seasons(id) ON DELETE CASCADE,
  user_id UUID NOT NULL REFERENCES public.users(id) ON DELETE CASCADE,
  final_rank INT NOT NULL,
  final_points INT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT timezone('utc'::text, now()) NOT NULL,
  -- Ensure a user can only have one rank per season
  CONSTRAINT user_season_rank_unique UNIQUE (user_id, season_id)
);

-- Step 3: Modify the existing claimed_prizes table to be season-aware
-- First, drop the old unique constraint on user_id
ALTER TABLE public.claimed_prizes
DROP CONSTRAINT IF EXISTS claimed_prizes_user_id_key;

-- Add the season_id column. It can be nullable for prizes claimed before this system was in place.
ALTER TABLE public.claimed_prizes
ADD COLUMN IF NOT EXISTS season_id BIGINT REFERENCES public.leaderboard_seasons(id) ON DELETE SET NULL;

-- Add a new unique constraint across user_id and season_id
-- This allows a user to claim one prize per season.
ALTER TABLE public.claimed_prizes
ADD CONSTRAINT user_season_prize_unique UNIQUE (user_id, season_id);

-- Commenting on the new tables and columns for clarity
COMMENT ON TABLE public.leaderboard_seasons IS 'Manages monthly leaderboard seasons.';
COMMENT ON TABLE public.season_rankings IS 'Archives the final rank and points of users for each season.';
COMMENT ON COLUMN public.claimed_prizes.season_id IS 'Links the claimed prize to a specific leaderboard season.';
