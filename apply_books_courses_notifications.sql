-- ===================================================================
-- ุชุทุจูู ุฅุดุนุงุฑุงุช ุงููุชุจ ูุงูููุฑุณุงุช - Script ูุฌูุน ููุชุทุจูู
-- ===================================================================
-- ูุฐุง ุงูู script ูุทุจู ุฌููุน ุงูุชุญุฏูุซุงุช ุงููุทููุจุฉ ูุฅุถุงูุฉ ุฅุดุนุงุฑุงุช ุงููุชุจ ูุงูููุฑุณุงุช

-- ===================================================================
-- 1. ุฅุถุงูุฉ ุฃุนูุฏุฉ ุงููุชุจ ูุงูููุฑุณุงุช ูุฌุฏูู notification_preferences
-- ===================================================================
ALTER TABLE notification_preferences 
ADD COLUMN IF NOT EXISTS books BOOLEAN DEFAULT true;

ALTER TABLE notification_preferences 
ADD COLUMN IF NOT EXISTS courses BOOLEAN DEFAULT true;

-- ===================================================================
-- 2. ุฅูุดุงุก ุฏูุงู triggers ูููุชุจ ูุงูููุฑุณุงุช
-- ===================================================================

-- ุฏุงูุฉ ูููุชุจ
CREATE OR REPLACE FUNCTION notify_books_change()
RETURNS TRIGGER AS $$
DECLARE
  webhook_url text;
  payload jsonb;
  should_send_notification boolean := true;
BEGIN
  -- ูุญุต ูุง ุฅุฐุง ูุงู ุงูุชุญุฏูุซ ููุท ุนูู ุนููุฏ views
  IF TG_OP = 'UPDATE' THEN
    -- ุชุญูู ูู ุฃู ุงูุชุบููุฑ ููุณ ููุท ุนูู views ุฃู updated_at
    IF NOT (
      OLD.name IS DISTINCT FROM NEW.name OR
      OLD.author IS DISTINCT FROM NEW.author OR
      OLD.description IS DISTINCT FROM NEW.description OR
      OLD.price IS DISTINCT FROM NEW.price OR
      OLD.phone IS DISTINCT FROM NEW.phone OR
      OLD.image_url IS DISTINCT FROM NEW.image_url
    ) THEN
      -- ููุท views ุฃู updated_at ุชู ุชุญุฏูุซููุง - ูุง ูุฑุณู ุฅุดุนุงุฑ
      RAISE NOTICE 'Skipping notification - only views or updated_at changed';
      RETURN NEW;
    END IF;
  END IF;

  -- ุงูุญุตูู ุนูู webhook URL
  webhook_url := current_setting('app.webhook_url', true);
  
  IF webhook_url IS NULL OR webhook_url = '' THEN
    RAISE NOTICE 'Webhook URL not configured';
    RETURN NEW;
  END IF;

  -- ุฅูุดุงุก payload ููุฅุดุนุงุฑ
  payload := jsonb_build_object(
    'type', TG_OP,
    'table', TG_TABLE_NAME,
    'record', row_to_json(NEW),
    'old_record', CASE WHEN TG_OP = 'UPDATE' THEN row_to_json(OLD) ELSE null END
  );

  -- ุฅุฑุณุงู webhook
  PERFORM net.http_post(
    url := webhook_url,
    body := payload::text,
    headers := '{"Content-Type": "application/json"}'::jsonb
  );

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ุฏุงูุฉ ููููุฑุณุงุช
CREATE OR REPLACE FUNCTION notify_courses_change()
RETURNS TRIGGER AS $$
DECLARE
  webhook_url text;
  payload jsonb;
  should_send_notification boolean := true;
BEGIN
  -- ูุญุต ูุง ุฅุฐุง ูุงู ุงูุชุญุฏูุซ ููุท ุนูู ุนููุฏ views
  IF TG_OP = 'UPDATE' THEN
    -- ุชุญูู ูู ุฃู ุงูุชุบููุฑ ููุณ ููุท ุนูู views ุฃู updated_at
    IF NOT (
      OLD.title IS DISTINCT FROM NEW.title OR
      OLD.description IS DISTINCT FROM NEW.description OR
      OLD.price IS DISTINCT FROM NEW.price OR
      OLD.phone IS DISTINCT FROM NEW.phone OR
      OLD.image_url IS DISTINCT FROM NEW.image_url
    ) THEN
      -- ููุท views ุฃู updated_at ุชู ุชุญุฏูุซููุง - ูุง ูุฑุณู ุฅุดุนุงุฑ
      RAISE NOTICE 'Skipping notification - only views or updated_at changed';
      RETURN NEW;
    END IF;
  END IF;

  -- ุงูุญุตูู ุนูู webhook URL
  webhook_url := current_setting('app.webhook_url', true);
  
  IF webhook_url IS NULL OR webhook_url = '' THEN
    RAISE NOTICE 'Webhook URL not configured';
    RETURN NEW;
  END IF;

  -- ุฅูุดุงุก payload ููุฅุดุนุงุฑ
  payload := jsonb_build_object(
    'type', TG_OP,
    'table', TG_TABLE_NAME,
    'record', row_to_json(NEW),
    'old_record', CASE WHEN TG_OP = 'UPDATE' THEN row_to_json(OLD) ELSE null END
  );

  -- ุฅุฑุณุงู webhook
  PERFORM net.http_post(
    url := webhook_url,
    body := payload::text,
    headers := '{"Content-Type": "application/json"}'::jsonb
  );

  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ===================================================================
-- 3. ุฅูุดุงุก triggers ูููุชุจ ูุงูููุฑุณุงุช ูุน ุชุฌุงูู ุชุญุฏูุซุงุช views
-- ===================================================================

-- ุญุฐู triggers ุงููุฏููุฉ ุฅู ูุฌุฏุช
DROP TRIGGER IF EXISTS trigger_notify_vet_books ON vet_books;
DROP TRIGGER IF EXISTS trigger_notify_vet_courses ON vet_courses;

-- trigger ูููุชุจ
CREATE TRIGGER trigger_notify_vet_books
AFTER INSERT OR UPDATE ON vet_books
FOR EACH ROW
EXECUTE FUNCTION notify_books_change();

-- trigger ููููุฑุณุงุช
CREATE TRIGGER trigger_notify_vet_courses
AFTER INSERT OR UPDATE ON vet_courses
FOR EACH ROW
EXECUTE FUNCTION notify_courses_change();

-- ===================================================================
-- 4. ุชุญุฏูุซ ุงูุฅุนุฏุงุฏุงุช ุงูุงูุชุฑุงุถูุฉ ูููุณุชุฎุฏููู ุงูุญุงูููู
-- ===================================================================

-- ุชุญุฏูุซ ุฌููุน ุงููุณุชุฎุฏููู ุงูุญุงูููู ููููู ูุฏููู ุฅุดุนุงุฑุงุช ุงููุชุจ ูุงูููุฑุณุงุช ููุนูุฉ
UPDATE notification_preferences 
SET 
  books = COALESCE(books, true),
  courses = COALESCE(courses, true)
WHERE books IS NULL OR courses IS NULL;

-- ===================================================================
-- 5. ุงุฎุชุจุงุฑ ุงูุชุทุจูู
-- ===================================================================

-- ุนุฑุถ ุจุนุถ ุงููุนูููุงุช ููุชุฃูุฏ ูู ุงูุชุทุจูู
SELECT 
  'Books and Courses notification system installed successfully!' as status,
  'Tables: vet_books, vet_courses' as tables,
  'Triggers: trigger_notify_vet_books, trigger_notify_vet_courses' as triggers,
  'Functions: notify_books_change(), notify_courses_change()' as functions,
  'Preferences: books, courses columns added' as preferences;

-- ุนุฑุถ ุนุฏุฏ ุงููุณุชุฎุฏููู ุงูุฐูู ุชู ุชุญุฏูุซ ุฅุนุฏุงุฏุงุชูู
SELECT 
  COUNT(*) as total_users_updated,
  COUNT(CASE WHEN books = true THEN 1 END) as users_with_books_enabled,
  COUNT(CASE WHEN courses = true THEN 1 END) as users_with_courses_enabled
FROM notification_preferences;

-- ===================================================================
-- ุชู ุงูุงูุชูุงุก ูู ุชุทุจูู ุงููุธุงู ุจูุฌุงุญ! ๐
-- ===================================================================

/*
ุงูุขู ููููู:
1. ุฅุถุงูุฉ ูุชุงุจ ุฌุฏูุฏ ูู ุฌุฏูู vet_books โ ุณูุฑุณู ุฅุดุนุงุฑ "๐ ูุชุงุจ ุจูุทุฑู ุฌุฏูุฏ"
2. ุชุญุฏูุซ ูุชุงุจ (ุบูุฑ ุนููุฏ views) โ ุณูุฑุณู ุฅุดุนุงุฑ "๐ ุชุญุฏูุซ ูุชุงุจ ุจูุทุฑู"
3. ุฅุถุงูุฉ ููุฑุณ ุฌุฏูุฏ ูู ุฌุฏูู vet_courses โ ุณูุฑุณู ุฅุดุนุงุฑ "๐ ููุฑุณ ุจูุทุฑู ุฌุฏูุฏ"
4. ุชุญุฏูุซ ููุฑุณ (ุบูุฑ ุนููุฏ views) โ ุณูุฑุณู ุฅุดุนุงุฑ "๐ ุชุญุฏูุซ ููุฑุณ ุจูุทุฑู"
5. ุชุญุฏูุซ ุนููุฏ views ููุท โ ูู ูุฑุณู ุฅุดุนุงุฑ (ูุญูู!)
6. ุงูุชุญูู ูู ุงูุฅุดุนุงุฑุงุช ูู ุฅุนุฏุงุฏุงุช ุงูุชุทุจูู
*/